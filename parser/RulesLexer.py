# Generated from Rules.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,11,89,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,1,0,1,0,1,1,1,1,1,2,1,2,
        1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,
        1,5,1,5,1,5,1,5,1,5,1,6,1,6,5,6,53,8,6,10,6,12,6,56,9,6,1,7,1,7,
        1,7,1,7,5,7,62,8,7,10,7,12,7,65,9,7,1,7,1,7,1,8,4,8,70,8,8,11,8,
        12,8,71,1,9,4,9,75,8,9,11,9,12,9,76,1,9,1,9,1,10,1,10,5,10,83,8,
        10,10,10,12,10,86,9,10,1,10,1,10,0,0,11,1,1,3,2,5,3,7,4,9,5,11,6,
        13,7,15,8,17,9,19,10,21,11,1,0,6,2,0,65,90,97,122,4,0,48,57,65,90,
        95,95,97,122,2,0,34,34,92,92,1,0,48,57,3,0,9,10,13,13,32,32,2,0,
        10,10,13,13,94,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,
        9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,
        19,1,0,0,0,0,21,1,0,0,0,1,23,1,0,0,0,3,25,1,0,0,0,5,27,1,0,0,0,7,
        29,1,0,0,0,9,34,1,0,0,0,11,39,1,0,0,0,13,50,1,0,0,0,15,57,1,0,0,
        0,17,69,1,0,0,0,19,74,1,0,0,0,21,80,1,0,0,0,23,24,5,61,0,0,24,2,
        1,0,0,0,25,26,5,123,0,0,26,4,1,0,0,0,27,28,5,125,0,0,28,6,1,0,0,
        0,29,30,5,110,0,0,30,31,5,97,0,0,31,32,5,109,0,0,32,33,5,101,0,0,
        33,8,1,0,0,0,34,35,5,116,0,0,35,36,5,97,0,0,36,37,5,103,0,0,37,38,
        5,115,0,0,38,10,1,0,0,0,39,40,5,99,0,0,40,41,5,111,0,0,41,42,5,110,
        0,0,42,43,5,100,0,0,43,44,5,105,0,0,44,45,5,116,0,0,45,46,5,105,
        0,0,46,47,5,111,0,0,47,48,5,110,0,0,48,49,5,115,0,0,49,12,1,0,0,
        0,50,54,7,0,0,0,51,53,7,1,0,0,52,51,1,0,0,0,53,56,1,0,0,0,54,52,
        1,0,0,0,54,55,1,0,0,0,55,14,1,0,0,0,56,54,1,0,0,0,57,63,5,34,0,0,
        58,62,8,2,0,0,59,60,5,92,0,0,60,62,9,0,0,0,61,58,1,0,0,0,61,59,1,
        0,0,0,62,65,1,0,0,0,63,61,1,0,0,0,63,64,1,0,0,0,64,66,1,0,0,0,65,
        63,1,0,0,0,66,67,5,34,0,0,67,16,1,0,0,0,68,70,7,3,0,0,69,68,1,0,
        0,0,70,71,1,0,0,0,71,69,1,0,0,0,71,72,1,0,0,0,72,18,1,0,0,0,73,75,
        7,4,0,0,74,73,1,0,0,0,75,76,1,0,0,0,76,74,1,0,0,0,76,77,1,0,0,0,
        77,78,1,0,0,0,78,79,6,9,0,0,79,20,1,0,0,0,80,84,5,35,0,0,81,83,8,
        5,0,0,82,81,1,0,0,0,83,86,1,0,0,0,84,82,1,0,0,0,84,85,1,0,0,0,85,
        87,1,0,0,0,86,84,1,0,0,0,87,88,6,10,0,0,88,22,1,0,0,0,7,0,54,61,
        63,71,76,84,1,6,0,0
    ]

class RulesLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    IDENTIFIER = 7
    STRING = 8
    NUMBER = 9
    WS = 10
    COMMENT = 11

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'='", "'{'", "'}'", "'name'", "'tags'", "'conditions'" ]

    symbolicNames = [ "<INVALID>",
            "IDENTIFIER", "STRING", "NUMBER", "WS", "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "IDENTIFIER", 
                  "STRING", "NUMBER", "WS", "COMMENT" ]

    grammarFileName = "Rules.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


