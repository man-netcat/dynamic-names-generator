# Generated from Rules.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,12,100,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,1,0,1,0,1,1,
        1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
        1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,7,1,7,5,7,64,8,7,10,7,12,7,67,9,7,1,8,1,8,1,8,1,8,5,8,73,8,
        8,10,8,12,8,76,9,8,1,8,1,8,1,9,4,9,81,8,9,11,9,12,9,82,1,10,4,10,
        86,8,10,11,10,12,10,87,1,10,1,10,1,11,1,11,5,11,94,8,11,10,11,12,
        11,97,9,11,1,11,1,11,0,0,12,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
        9,19,10,21,11,23,12,1,0,6,2,0,65,90,97,122,4,0,48,57,65,90,95,95,
        97,122,2,0,34,34,92,92,1,0,48,57,3,0,9,10,13,13,32,32,2,0,10,10,
        13,13,105,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
        0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
        0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,1,25,1,0,0,0,3,27,1,0,0,0,5,29,1,
        0,0,0,7,31,1,0,0,0,9,36,1,0,0,0,11,45,1,0,0,0,13,50,1,0,0,0,15,61,
        1,0,0,0,17,68,1,0,0,0,19,80,1,0,0,0,21,85,1,0,0,0,23,91,1,0,0,0,
        25,26,5,61,0,0,26,2,1,0,0,0,27,28,5,123,0,0,28,4,1,0,0,0,29,30,5,
        125,0,0,30,6,1,0,0,0,31,32,5,110,0,0,32,33,5,97,0,0,33,34,5,109,
        0,0,34,35,5,101,0,0,35,8,1,0,0,0,36,37,5,110,0,0,37,38,5,97,0,0,
        38,39,5,109,0,0,39,40,5,101,0,0,40,41,5,95,0,0,41,42,5,97,0,0,42,
        43,5,100,0,0,43,44,5,106,0,0,44,10,1,0,0,0,45,46,5,116,0,0,46,47,
        5,97,0,0,47,48,5,103,0,0,48,49,5,115,0,0,49,12,1,0,0,0,50,51,5,99,
        0,0,51,52,5,111,0,0,52,53,5,110,0,0,53,54,5,100,0,0,54,55,5,105,
        0,0,55,56,5,116,0,0,56,57,5,105,0,0,57,58,5,111,0,0,58,59,5,110,
        0,0,59,60,5,115,0,0,60,14,1,0,0,0,61,65,7,0,0,0,62,64,7,1,0,0,63,
        62,1,0,0,0,64,67,1,0,0,0,65,63,1,0,0,0,65,66,1,0,0,0,66,16,1,0,0,
        0,67,65,1,0,0,0,68,74,5,34,0,0,69,73,8,2,0,0,70,71,5,92,0,0,71,73,
        9,0,0,0,72,69,1,0,0,0,72,70,1,0,0,0,73,76,1,0,0,0,74,72,1,0,0,0,
        74,75,1,0,0,0,75,77,1,0,0,0,76,74,1,0,0,0,77,78,5,34,0,0,78,18,1,
        0,0,0,79,81,7,3,0,0,80,79,1,0,0,0,81,82,1,0,0,0,82,80,1,0,0,0,82,
        83,1,0,0,0,83,20,1,0,0,0,84,86,7,4,0,0,85,84,1,0,0,0,86,87,1,0,0,
        0,87,85,1,0,0,0,87,88,1,0,0,0,88,89,1,0,0,0,89,90,6,10,0,0,90,22,
        1,0,0,0,91,95,5,35,0,0,92,94,8,5,0,0,93,92,1,0,0,0,94,97,1,0,0,0,
        95,93,1,0,0,0,95,96,1,0,0,0,96,98,1,0,0,0,97,95,1,0,0,0,98,99,6,
        11,0,0,99,24,1,0,0,0,7,0,65,72,74,82,87,95,1,6,0,0
    ]

class RulesLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    IDENTIFIER = 8
    STRING = 9
    NUMBER = 10
    WS = 11
    COMMENT = 12

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'='", "'{'", "'}'", "'name'", "'name_adj'", "'tags'", "'conditions'" ]

    symbolicNames = [ "<INVALID>",
            "IDENTIFIER", "STRING", "NUMBER", "WS", "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "IDENTIFIER", "STRING", "NUMBER", "WS", "COMMENT" ]

    grammarFileName = "Rules.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


